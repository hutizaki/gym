{"version":3,"mappings":"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","names":["f","require$$0","k","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","StatusBar","time","battery","currentTime","setCurrentTime","useState","useEffect","updateTime","timeString","interval","percentage","jsxs","jsx","Header","title","subtitle","getDefaultSubtitle","now","startOfWeek","getStartOfWeek","endOfWeek","getEndOfWeek","startStr","endStr","date","day","diff","start","end","StreakSection","count","label","streakCount","setStreakCount","handleWorkoutCompleted","prev","animateStreakUpdate","streakNumber","dumbbellIcon","DayCard","status","workout","friends","onClick","friend","i","WeekGrid","weeksData","weekData","dayNames","scrollRef","useRef","setCurrentWeekIndex","currentMonth","setCurrentMonth","weeks","useMemo","updateCurrentMonth","useCallback","weekIndex","currentWeek","todayString","todayCard","monthName","firstDay","handleScroll","containerWidth","scrollLeft","currentIndex","boundedIndex","scrollTimeout","throttledScrollHandler","scrollContainer","timer","targetWeekIndex","scrollPosition","completeWorkout","dayIndex","makeUpWorkout","handleDayClick","week","actualDayName","FriendsSection","friendsData","activeCount","handleFriendClick","friendIndex","index","ChallengeBanner","active","handleChallengeClick","challengeData","VersionTracker","DataService","today","currentWeekStart","weekOffset","dayDate","weekStart","dayOffset","weekStartForLabel","ws","workouts","allFriends","isCurrent","weekEnd","options","App","setWeeksData","setFriendsData","setChallengeData","streakData","setStreakData","headerData","setHeaderData","event","handleFriendSelected","handleChallengeClicked","lazy","__vitePreload","StatusBar$1","Header$1","StreakSection$1","WeekGrid$1","FriendsSection$1","ChallengeBanner$1","VersionTracker$1","AppComponent","root","ReactDOM","React","registration","registrationError"],"ignoreList":[0,1,2],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/StatusBar.jsx","../../src/components/Header.jsx","../../src/components/StreakSection.jsx","../../src/assets/Dumbbell_Weights.png","../../src/components/DayCard.jsx","../../src/components/WeekGrid.jsx","../../src/components/FriendsSection.jsx","../../src/components/ChallengeBanner.jsx","../../src/components/VersionTracker.jsx","../../src/services/DataService.js","../../src/App.jsx","../../src/AppOptimized.jsx","../../src/index.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport '../styles/status-bar.css';\n\nconst StatusBar = ({ time = '9:41', battery = '100%' }) => {\n  const [currentTime, setCurrentTime] = useState(time);\n\n  useEffect(() => {\n    // Update time every minute\n    const updateTime = () => {\n      const now = new Date();\n      const timeString = now.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: false \n      });\n      setCurrentTime(timeString);\n    };\n\n    updateTime(); // Set initial time\n    const interval = setInterval(updateTime, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    // Update battery if available\n    if ('getBattery' in navigator) {\n      navigator.getBattery().then(battery => {\n        const percentage = Math.round(battery.level * 100);\n        // You could set this in state if needed\n        console.log('Battery level:', percentage);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"status-bar\">\n      <div className=\"time\">{currentTime}</div>\n      <div className=\"spacer\"></div>\n      <div className=\"battery\">{battery}</div>\n    </div>\n  );\n};\n\nexport default StatusBar;\n","import React from 'react';\nimport '../styles/header.css';\n\nconst Header = ({ title = 'This Week', subtitle }) => {\n  const getDefaultSubtitle = () => {\n    const now = new Date();\n    const startOfWeek = getStartOfWeek(now);\n    const endOfWeek = getEndOfWeek(now);\n    \n    const startStr = startOfWeek.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric' \n    });\n    const endStr = endOfWeek.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      year: 'numeric'\n    });\n    \n    return `${startStr} - ${endStr}`;\n  };\n\n  const getStartOfWeek = (date) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(d.setDate(diff));\n  };\n\n  const getEndOfWeek = (date) => {\n    const start = getStartOfWeek(date);\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return end;\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"week-title\">{title}</div>\n      <div className=\"week-subtitle\">{subtitle || getDefaultSubtitle()}</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport '../styles/streak-section.css';\n\nconst StreakSection = ({ count = 4, label = 'Day Streak' }) => {\n  const [streakCount, setStreakCount] = useState(count);\n\n  useEffect(() => {\n    // Listen for workout completed events\n    const handleWorkoutCompleted = () => {\n      setStreakCount(prev => prev + 1);\n      animateStreakUpdate();\n    };\n\n    document.addEventListener('workoutCompleted', handleWorkoutCompleted);\n    \n    return () => {\n      document.removeEventListener('workoutCompleted', handleWorkoutCompleted);\n    };\n  }, []);\n\n  const animateStreakUpdate = () => {\n    const streakNumber = document.querySelector('.streak-number');\n    if (streakNumber) {\n      streakNumber.style.transform = 'scale(1.2)';\n      streakNumber.style.transition = 'transform 0.3s ease';\n      \n      setTimeout(() => {\n        streakNumber.style.transform = 'scale(1)';\n      }, 300);\n    }\n  };\n\n  return (\n    <div className=\"streak-section\">\n      <div className=\"streak-content\">\n        <div className=\"streak-number\">🔥 {streakCount}</div>\n        <div className=\"streak-label\">{label}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default StreakSection;\n","export default \"__VITE_ASSET__ndX64X1c__\"","import React from 'react';\nimport '../styles/day-card.css';\nimport dumbbellIcon from '../assets/Dumbbell_Weights.png';\n\nconst DayCard = ({ day, date, status, workout, friends, onClick }) => {\n  return (\n    <div className=\"day-card-container\">\n      <div className=\"day-of-week\">\n        <span>{day}</span>\n      </div>\n        <div className={`day-card ${status || ''}`} onClick={onClick}>\n          {date && <div className=\"day-date\">{date}</div>}\n          {status === 'completed' && <div className=\"workout-icon\">\n            {workout ? workout : <img src={dumbbellIcon} alt=\"dumbbell\"/>}\n          </div>}\n        {friends && friends.length > 0 && (\n          <div className={`day-friends ${friends.length > 2 ? 'overlapping' : ''}`}>\n            {friends.slice(0, 3).map((friend, i) => (\n              <div\n                key={i}\n                className={`friend-avatar avatar-${(i % 4) + 1}`}\n              >\n                {friend}\n              </div>\n            ))}\n            {friends.length > 3 && (\n              <span className=\"ellipsis\">...</span>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DayCard;\n","import React, { useEffect, useRef, useMemo, useState, useCallback } from 'react';\nimport DayCard from './DayCard';\nimport '../styles/week-grid.css';\n\nconst WeekGrid = ({ weeksData = [], weekData = [] }) => {\n  const dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const scrollRef = useRef(null);\n  const [, setCurrentWeekIndex] = useState(3); // Start at week 4 (index 3)\n  const [currentMonth, setCurrentMonth] = useState('');\n\n  // Use weeksData if provided, otherwise fall back to single week for backward compatibility\n  const weeks = useMemo(() => {\n    return weeksData.length > 0 ? weeksData : [{ days: weekData, label: 'This Week' }];\n  }, [weeksData, weekData]);\n\n  // Memoized helper function to update month based on visible week\n  const updateCurrentMonth = useCallback((weekIndex) => {\n    if (!weeks[weekIndex] || !weeks[weekIndex].days || weeks[weekIndex].days.length === 0) return;\n    \n    const currentWeek = weeks[weekIndex];\n    const today = new Date();\n    const todayString = today.toDateString();\n    \n    // First, try to find a \"today\" card in the current week\n    const todayCard = currentWeek.days.find(day => \n      day.status === 'today' && \n      day.fullDate && \n      day.fullDate.toDateString() === todayString\n    );\n    \n    if (todayCard && todayCard.fullDate) {\n      // Use the month from the today card\n      const monthName = todayCard.fullDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n      setCurrentMonth(monthName);\n    } else {\n      // Fallback to the first day of the visible week\n      const firstDay = currentWeek.days[0];\n      if (firstDay && firstDay.fullDate) {\n        const monthName = firstDay.fullDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n        setCurrentMonth(monthName);\n      }\n    }\n  }, [weeks]);\n\n  // Throttled scroll handler for better performance\n  const handleScroll = useCallback(() => {\n    if (!scrollRef.current) return;\n    \n    const containerWidth = scrollRef.current.offsetWidth;\n    const scrollLeft = scrollRef.current.scrollLeft;\n    \n    // Calculate which week is currently visible\n    const currentIndex = Math.round(scrollLeft / containerWidth);\n    \n    // Ensure index is within bounds\n    const boundedIndex = Math.max(0, Math.min(currentIndex, weeks.length - 1));\n    \n    setCurrentWeekIndex(boundedIndex);\n    \n    // Update current month - prioritize Today card, otherwise use first visible card\n    updateCurrentMonth(boundedIndex);\n  }, [weeks.length, updateCurrentMonth]);\n\n  useEffect(() => {\n    if (scrollRef.current && weeks.length > 0) {\n      // Throttled scroll handler for better performance\n      let scrollTimeout;\n      const throttledScrollHandler = () => {\n        if (scrollTimeout) return;\n        scrollTimeout = setTimeout(() => {\n          handleScroll();\n          scrollTimeout = null;\n        }, 16); // ~60fps throttling\n      };\n      \n      const scrollContainer = scrollRef.current;\n      scrollContainer.addEventListener('scroll', throttledScrollHandler);\n      \n      // Use setTimeout to ensure layout is complete\n      const timer = setTimeout(() => {\n        if (!scrollRef.current) return;\n        \n        // Snap to week 4 (index 3) in the array - this is now the current week\n        const targetWeekIndex = 3;\n        \n        if (weeks.length > targetWeekIndex) {\n          const containerWidth = scrollRef.current.offsetWidth;\n          \n          // Calculate scroll position to show week 4\n          // Each week takes full container width, so multiply by index\n          const scrollPosition = targetWeekIndex * containerWidth;\n          \n          scrollRef.current.scrollTo({\n            left: scrollPosition,\n            behavior: 'instant'\n          });\n          \n          // Update current week index after initial scroll\n          setCurrentWeekIndex(targetWeekIndex);\n          \n          // Set initial month using the helper function\n          updateCurrentMonth(targetWeekIndex);\n        }\n      }, 100);\n      \n      return () => {\n        clearTimeout(timer);\n        clearTimeout(scrollTimeout);\n        if (scrollContainer) {\n          scrollContainer.removeEventListener('scroll', throttledScrollHandler);\n        }\n      };\n    }\n  }, [weeks, handleScroll, updateCurrentMonth]);\n\n  const completeWorkout = useCallback((weekIndex, dayIndex) => {\n    // Trigger streak update event\n    document.dispatchEvent(new CustomEvent('workoutCompleted', { \n      detail: { weekIndex, dayIndex } \n    }));\n  }, []);\n\n  const makeUpWorkout = useCallback((weekIndex, dayIndex) => {\n    // Trigger streak update event\n    document.dispatchEvent(new CustomEvent('workoutCompleted', { \n      detail: { weekIndex, dayIndex } \n    }));\n  }, []);\n\n  const handleDayClick = useCallback((day, weekIndex, dayIndex) => {\n    if (day.status === 'today') {\n      completeWorkout(weekIndex, dayIndex);\n    } else if (day.status === 'missed') {\n      makeUpWorkout(weekIndex, dayIndex);\n    }\n  }, [completeWorkout, makeUpWorkout]);\n\n  return (\n    <div className=\"weeks-container\">\n      <div className=\"month-header\">\n        <h3 className=\"month-label\">{currentMonth}</h3>\n      </div>\n      <div className=\"weeks-scroll\" ref={scrollRef}>\n        {weeks.map((week, weekIndex) => (\n          <div key={weekIndex} className=\"week-section\">\n            <div className=\"days-grid\">\n              <div className=\"days-row\">\n                {week.days.map((day, dayIndex) => {\n                  // Calculate day name directly (moved outside of useMemo to fix hook rules)\n                  const actualDayName = day.fullDate ? day.fullDate.toLocaleDateString('en-US', { weekday: 'short' }) : dayNames[dayIndex];\n                  \n                  return (\n                    <DayCard\n                      key={`${weekIndex}-${dayIndex}`}\n                      day={actualDayName}\n                      date={day.date}\n                      status={day.status}\n                      workout={day.workout}\n                      friends={day.friends}\n                      onClick={() => handleDayClick(day, weekIndex, dayIndex)}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default WeekGrid;\n","import React from 'react';\nimport '../styles/friends-section.css';\n\nconst FriendsSection = ({ \n  friendsData = [], \n  title = '🏆 This Week\\'s Champions', \n  count \n}) => {\n  const activeCount = count || friendsData.length;\n\n  const handleFriendClick = (friend, friendIndex) => {\n    console.log('Friend selected:', friend);\n    // Dispatch event for friend selection\n    document.dispatchEvent(new CustomEvent('friendSelected', { \n      detail: { friend, friendIndex } \n    }));\n  };\n\n  return (\n    <div className=\"friends-section\">\n      <div className=\"friends-header\">\n        <div className=\"friends-title\">{title}</div>\n        <div className=\"friends-count\">{activeCount} Active</div>\n      </div>\n      <div className=\"friends-grid\">\n        {friendsData.map((friend, index) => (\n          <div\n            key={index}\n            className={`friend-card ${friend.isLeader ? 'leader' : ''} ${friend.isYou ? 'you' : ''}`}\n            onClick={() => handleFriendClick(friend, index)}\n          >\n            {friend.isLeader && <div className=\"crown-icon\">👑</div>}\n            <div className={`friend-avatar-large avatar-${(index % 4) + 1}`}>\n              {friend.avatar}\n            </div>\n            <div className=\"friend-name\">{friend.name}</div>\n            <div className=\"friend-streak\">{friend.streak} days</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FriendsSection;\n","import React from 'react';\nimport '../styles/challenge-banner.css';\n\nconst ChallengeBanner = ({ \n  title = '💥 Weekend Challenge', \n  subtitle = 'Can you beat Sarah\\'s 5-day streak?', \n  active = true \n}) => {\n  const handleChallengeClick = () => {\n    const challengeData = { title, subtitle, isActive: active };\n    \n    // Dispatch event for challenge interaction\n    document.dispatchEvent(new CustomEvent('challengeClicked', { \n      detail: { challenge: challengeData } \n    }));\n  };\n\n  return (\n    <div \n      className=\"challenge-banner\"\n      style={{\n        opacity: active ? '1' : '0.5',\n        pointerEvents: active ? 'auto' : 'none'\n      }}\n      onClick={handleChallengeClick}\n    >\n      <div className=\"challenge-content\">\n        <div className=\"challenge-title\">{title}</div>\n        <div className=\"challenge-subtitle\">{subtitle}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChallengeBanner;\n","import React from 'react';\nimport '../styles/version-tracker.css';\n\nconst VersionTracker = () => {\n  return (\n    <div className=\"version-tracker\">\n      v.0.1\n    </div>\n  );\n};\n\nexport default VersionTracker;\n","export class DataService {\n    static getWeeksData() {\n        const today = new Date();\n        const currentWeekStart = new Date(today);\n        currentWeekStart.setDate(today.getDate() - today.getDay() + 1); // Monday of current week\n        \n        const weeks = [];\n        \n        // Generate 4 weeks of data (3 past weeks + current week)\n        for (let weekOffset = -3; weekOffset <= 0; weekOffset++) {\n            let weekData = [];\n            \n            if (weekOffset === 0) {\n                // Special handling for current week - build around today's date\n                // Today should be at index 4, so build: [today-4, today-3, today-2, today-1, today, today+1, today+2]\n                for (let dayIndex = 0; dayIndex < 7; dayIndex++) {\n                    const dayDate = new Date(today);\n                    dayDate.setDate(today.getDate() + (dayIndex - 4)); // today-4 to today+2\n                    \n                    let status = 'completed';\n                    let workout = this.getRandomWorkout();\n                    let friends = this.getRandomFriends();\n                    \n                    // Determine status based on date\n                    if (dayDate.toDateString() === today.toDateString()) {\n                        status = 'today';\n                        workout = '⚡';\n                    } else if (dayDate > today) {\n                        status = 'future';\n                        workout = null;\n                        friends = [];\n                    } else if (Math.random() > 0.8) { // 20% chance of missed workout\n                        status = 'missed';\n                        workout = null;\n                        friends = this.getRandomFriends().slice(0, 2);\n                    }\n                    \n                    weekData.push({\n                        date: dayDate.getDate(),\n                        fullDate: dayDate,\n                        status,\n                        workout,\n                        friends\n                    });\n                }\n            } else {\n                // Regular past weeks - use normal week structure\n                const weekStart = new Date(currentWeekStart);\n                weekStart.setDate(currentWeekStart.getDate() + (weekOffset * 7));\n                \n                for (let dayOffset = 0; dayOffset < 7; dayOffset++) {\n                    const dayDate = new Date(weekStart);\n                    dayDate.setDate(weekStart.getDate() + dayOffset);\n                    \n                    let status = 'completed';\n                    let workout = this.getRandomWorkout();\n                    let friends = this.getRandomFriends();\n                    \n                    if (Math.random() > 0.8) { // 20% chance of missed workout\n                        status = 'missed';\n                        workout = null;\n                        friends = this.getRandomFriends().slice(0, 2);\n                    }\n                    \n                    weekData.push({\n                        date: dayDate.getDate(),\n                        fullDate: dayDate,\n                        status,\n                        workout,\n                        friends\n                    });\n                }\n            }\n            \n            const weekStartForLabel = weekOffset === 0 ? \n                new Date(today.getTime() - (4 * 24 * 60 * 60 * 1000)) : // today-4 for current week\n                (() => {\n                    const ws = new Date(currentWeekStart);\n                    ws.setDate(currentWeekStart.getDate() + (weekOffset * 7));\n                    return ws;\n                })();\n            \n            weeks.push({\n                weekStart: weekStartForLabel,\n                days: weekData,\n                label: this.getWeekLabel(weekStartForLabel, weekOffset === 0)\n            });\n        }\n        \n        return weeks;\n    }\n    \n    static getWeekData() {\n        // Keep for backward compatibility - return current week only\n        const weeks = this.getWeeksData();\n        return weeks[weeks.length - 1].days; // Return current week\n    }\n    \n    static getRandomWorkout() {\n        const workouts = ['💪', '🏃', '🏋️', '🚴', '🏊', '🧘'];\n        return workouts[Math.floor(Math.random() * workouts.length)];\n    }\n    \n    static getRandomFriends() {\n        const allFriends = ['S', 'M', 'A', 'J', 'K', 'L', 'B', 'C'];\n        const count = Math.floor(Math.random() * 4) + 1; // 1-4 friends\n        return allFriends.slice(0, count);\n    }\n    \n    static getWeekLabel(weekStart, isCurrent) {\n        if (isCurrent) return 'This Week';\n        \n        const weekEnd = new Date(weekStart);\n        weekEnd.setDate(weekStart.getDate() + 6);\n        \n        const options = { month: 'short', day: 'numeric' };\n        return `${weekStart.toLocaleDateString('en-US', options)} - ${weekEnd.toLocaleDateString('en-US', options)}`;\n    }\n    \n    static getFriendsData() {\n        return [\n            { name: 'Sarah', streak: 5, isLeader: true, isYou: false, avatar: 'S' },\n            { name: 'You', streak: 4, isLeader: false, isYou: true, avatar: 'You' },\n            { name: 'Jake', streak: 3, isLeader: false, isYou: false, avatar: 'J' },\n            { name: 'Alex', streak: 2, isLeader: false, isYou: false, avatar: 'A' }\n        ];\n    }\n    \n    static getChallengeData() {\n        return {\n            title: '💥 Weekend Challenge',\n            subtitle: 'Can you beat Sarah\\'s 5-day streak?',\n            isActive: true\n        };\n    }\n    \n    static getStreakData() {\n        return {\n            count: 4,\n            label: 'Day Streak'\n        };\n    }\n    \n    static getHeaderData() {\n        return {\n            title: 'This Week',\n            subtitle: 'Sep 16 - Sep 22, 2024'\n        };\n    }\n}","import React, { useState, useEffect } from 'react';\nimport './styles/base.css';\nimport StatusBar from './components/StatusBar';\nimport Header from './components/Header';\nimport StreakSection from './components/StreakSection';\nimport WeekGrid from './components/WeekGrid';\nimport FriendsSection from './components/FriendsSection';\nimport ChallengeBanner from './components/ChallengeBanner';\nimport VersionTracker from './components/VersionTracker';\nimport { DataService } from './services/DataService';\n\nfunction App() {\n  const [weeksData, setWeeksData] = useState([]);\n  const [friendsData, setFriendsData] = useState([]);\n  const [challengeData, setChallengeData] = useState({});\n  const [streakData, setStreakData] = useState({});\n  const [headerData, setHeaderData] = useState({});\n\n  useEffect(() => {\n    // Load data from DataService\n    setWeeksData(DataService.getWeeksData());\n    setFriendsData(DataService.getFriendsData());\n    setChallengeData(DataService.getChallengeData());\n    setStreakData(DataService.getStreakData());\n    setHeaderData(DataService.getHeaderData());\n\n    // Set up global event listeners\n    const handleWorkoutCompleted = (event) => {\n      console.log('Workout completed:', event.detail);\n    };\n\n    const handleFriendSelected = (event) => {\n      console.log('Friend selected:', event.detail.friend);\n    };\n\n    const handleChallengeClicked = (event) => {\n      console.log('Challenge clicked:', event.detail.challenge);\n    };\n\n    document.addEventListener('workoutCompleted', handleWorkoutCompleted);\n    document.addEventListener('friendSelected', handleFriendSelected);\n    document.addEventListener('challengeClicked', handleChallengeClicked);\n\n    return () => {\n      document.removeEventListener('workoutCompleted', handleWorkoutCompleted);\n      document.removeEventListener('friendSelected', handleFriendSelected);\n      document.removeEventListener('challengeClicked', handleChallengeClicked);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <StatusBar />\n        <Header {...headerData} />\n        <StreakSection {...streakData} />\n        <WeekGrid weeksData={weeksData} />\n        <FriendsSection friendsData={friendsData} />\n        <ChallengeBanner {...challengeData} />\n        <div className=\"bottom-spacer\"></div>\n        <VersionTracker />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport './styles/base.css';\nimport { DataService } from './services/DataService';\n\n// Lazy load components for better code splitting\nconst StatusBar = lazy(() => import('./components/StatusBar'));\nconst Header = lazy(() => import('./components/Header'));\nconst StreakSection = lazy(() => import('./components/StreakSection'));\nconst WeekGrid = lazy(() => import('./components/WeekGrid'));\nconst FriendsSection = lazy(() => import('./components/FriendsSection'));\nconst ChallengeBanner = lazy(() => import('./components/ChallengeBanner'));\nconst VersionTracker = lazy(() => import('./components/VersionTracker'));\n\n// Loading component for better UX\nconst LoadingSpinner = () => (\n  <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: 'linear-gradient(180deg, #1a1a2e 0%, #16213e 100%)',\n    color: 'white'\n  }}>\n    <div style={{\n      width: '40px',\n      height: '40px',\n      border: '3px solid rgba(255,255,255,0.3)',\n      borderTop: '3px solid white',\n      borderRadius: '50%',\n      animation: 'spin 1s linear infinite'\n    }} />\n    <style>{`\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n    `}</style>\n  </div>\n);\n\nfunction AppOptimized() {\n  const [weeksData, setWeeksData] = useState([]);\n  const [friendsData, setFriendsData] = useState([]);\n  const [challengeData, setChallengeData] = useState({});\n  const [streakData, setStreakData] = useState({});\n  const [headerData, setHeaderData] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Optimized data loading with error handling\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Use requestIdleCallback for non-critical data loading\n        const loadNonCriticalData = () => {\n          setWeeksData(DataService.getWeeksData());\n          setFriendsData(DataService.getFriendsData());\n          setChallengeData(DataService.getChallengeData());\n          setStreakData(DataService.getStreakData());\n          setHeaderData(DataService.getHeaderData());\n          setIsLoaded(true);\n        };\n\n        if (window.requestIdleCallback) {\n          window.requestIdleCallback(loadNonCriticalData, { timeout: 100 });\n        } else {\n          setTimeout(loadNonCriticalData, 0);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n        setIsLoaded(true); // Still show the app even if data loading fails\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Optimized event listeners with cleanup\n  useEffect(() => {\n    if (!isLoaded) return;\n\n    const handleWorkoutCompleted = (event) => {\n      console.log('Workout completed:', event.detail);\n    };\n\n    const handleFriendSelected = (event) => {\n      console.log('Friend selected:', event.detail.friend);\n    };\n\n    const handleChallengeClicked = (event) => {\n      console.log('Challenge clicked:', event.detail.challenge);\n    };\n\n    // Use passive listeners where possible\n    document.addEventListener('workoutCompleted', handleWorkoutCompleted, { passive: true });\n    document.addEventListener('friendSelected', handleFriendSelected, { passive: true });\n    document.addEventListener('challengeClicked', handleChallengeClicked, { passive: true });\n\n    return () => {\n      document.removeEventListener('workoutCompleted', handleWorkoutCompleted);\n      document.removeEventListener('friendSelected', handleFriendSelected);\n      document.removeEventListener('challengeClicked', handleChallengeClicked);\n    };\n  }, [isLoaded]);\n\n  if (!isLoaded) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Suspense fallback={<div style={{ height: '60px' }} />}>\n          <StatusBar />\n        </Suspense>\n        \n        <Suspense fallback={<div style={{ height: '80px', margin: '10px' }} />}>\n          <Header {...headerData} />\n        </Suspense>\n        \n        <Suspense fallback={<div style={{ height: '120px', margin: '0 10px 15px' }} />}>\n          <StreakSection {...streakData} />\n        </Suspense>\n        \n        <Suspense fallback={<div style={{ height: '200px' }} />}>\n          <WeekGrid weeksData={weeksData} />\n        </Suspense>\n        \n        <Suspense fallback={<div style={{ height: '150px', margin: '0 10px' }} />}>\n          <FriendsSection friendsData={friendsData} />\n        </Suspense>\n        \n        <Suspense fallback={<div style={{ height: '80px', margin: '20px 10px' }} />}>\n          <ChallengeBanner {...challengeData} />\n        </Suspense>\n        \n        <div className=\"bottom-spacer\"></div>\n        \n        <Suspense fallback={null}>\n          <VersionTracker />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default AppOptimized;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n// Use optimized version if environment variable is set\nimport App from './App.jsx';\nimport AppOptimized from './AppOptimized.jsx';\n\nconst AppComponent = import.meta.env.VITE_OPTIMIZED === 'true' ? AppOptimized : App;\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AppComponent />\n  </React.StrictMode>\n);\n\n// Register service worker for caching\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js')\n      .then((registration) => {\n        console.log('SW registered: ', registration);\n      })\n      .catch((registrationError) => {\n        console.log('SW registration failed: ', registrationError);\n      });\n  });\n}\n"],"file":"assets/index-BolLYcn7.js"}